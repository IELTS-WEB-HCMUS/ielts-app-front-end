<head>
    <meta charset="utf-8" />
    <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css"
        integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://unpkg.com/bootstrap-table/dist/bootstrap-table.min.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/bootstrap-table/dist/bootstrap-table.min.css">

    <style>
        .fixed-table-loading {
            display: none !important;
        }

        /* General Table Styling */
        table {
            table-layout: fixed;
            /* Fixed layout for consistent column sizes */
            width: 100%;
            /* Full width */
            border-collapse: collapse;
            /* Remove extra spacing between borders */
        }

        /* Header and Cell Alignment */
        th,
        td {
            text-align: center;
            /* Center-align content */
            vertical-align: middle;
            /* Middle-align vertically */
            padding: 8px;
            /* Add padding for better spacing */
            word-wrap: break-word;
            /* Ensure words wrap properly */
            overflow-wrap: break-word;
            /* Alternative for better compatibility */
        }

        /* Header Styling */
        th {
            background-color: #f8f9fa;
            /* Light gray header background */
            font-weight: bold;
            white-space: normal;
            /* Allow text to wrap */
            word-wrap: break-word;
            /* Wrap long words */
            overflow-wrap: break-word;
            text-overflow: clip;
            /* Prevent ellipsis */
        }

        /* Fixed Column Styling */
        .fixed-column {
            width: 90px;
            /* Fixed width */
            max-width: 120px;
            white-space: normal;
            /* Allow wrapping */
            overflow-wrap: break-word;
        }

        /* Wider Column Styling */
        .fixed-column-wider {
            width: 150px;
            /* Fixed width */
            max-width: 180px;
            white-space: normal;
            /* Allow wrapping */
            overflow-wrap: break-word;
            word-wrap: break-word;
        }

        .fixed-column-widest {
            width: 400px;
            /* Fixed width */
            max-width: 500px;
            white-space: normal;
            /* Allow wrapping */
            overflow-wrap: break-word;
            word-wrap: break-word;
        }

        /* Scrollbar styling for smaller screens */
        @media (max-width: 768px) {
            .table-container {
                -ms-overflow-style: scrollbar;
                /* For Internet Explorer */
                overflow-x: auto;
                /* Enable scrolling on small screens */
            }
        }
    </style>
</head>

<body>
    <div class="wrapper" style="width: 100%; display: flex; justify-content: center;">
        <div class="table-container">
            <table id="fresh-table" class="table table-bordered">
                <thead class="thead-dark">
                    <th data-field="question" class="fixed-column-widest">Câu hỏi</th>
                    <th data-field="type" data-sortable="true" class="fixed-column-wider">Loại câu hỏi</th>
                    <th data-field="right" class="fixed-column">Đúng</th>
                    <th data-field="wrong" class="fixed-column">Sai</th>
                </thead>
                <tbody>
                    {{#each answers}}
                    <tr>
                        <td>{{#if this.answer.title.text}}{{{ this.answer.title.text}}}{{/if}}</td>
                        <td>{{{ this.type }}}</td>
                        {{#if this.correct}}
                        <td><strong>✔</strong></td>
                        {{else}}
                        <td></td>
                        {{/if}}
                        {{#unless this.correct}}
                        <td><strong>❌</strong></td>
                        {{else}}
                        <td></td>
                        {{/unless}}
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </div>
    </div>
    </div>
</body>
<script type="text/javascript"> 
    var $table = $('#fresh-table');

    const answers = {{ answers }};
    console.log(answers);

    async function fetchAnswerData(id) {
        const response = await fetch(`http://localhost:3000/user/explaination?id=${id}`);
        const data = await response.json();
        console.log(data);
        localStorage.setItem('quiz_id', data.data.quiz);
        return JSON.stringify(data);
    }

    $(function () {
        $table.bootstrapTable({
            classes: 'table table-hover table-striped',
            search: true,
            showColumns: true,
            pagination: true,
            striped: true,
            sortable: true,
            pageSize: 8,
            pageList: [5, 10, 25, 50, 100],
            toolbar: '.toolbar',
            iconsPrefix: 'fa',
            icons: {
                sort: 'fa-sort',
                plus: 'fa-plus',
                columns: 'fa-filter',
                detailOpen: 'fa-plus',
                detailClose: 'fa-minus'
            },
            formatLoadingMessage: function () {
                return '';
            },
            formatShowingRows: function (pageFrom, pageTo, totalRows) {
                return '';
            },
            formatRecordsPerPage: function (pageNumber) {
                return pageNumber;
            }
        });
    });
    $(document).on('click', '.reviewresult', async function () {
        const id = localStorage.getItem('answer_id');
        const data = await fetchAnswerData(id);
        window.location.href = '/user/explaination/test_explanation_page?id=' + id;

    });

</script>